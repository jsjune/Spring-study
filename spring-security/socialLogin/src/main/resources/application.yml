server:
  port: 8080

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/security
    username: root
    password: 1234
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
    show-sql: true

  security:
    oauth2:
      client:
        registration:
#          keycloak:
#            authorization-grant-type: authorization_code
#            client-id: oauth2-client-app
#            client-name: oauth2-client-app
#            client-secret: 9GrHcH6UbfMDEw3Zj38uGsYgRLDgZ3pP
#            redirect-uri: http://localhost:8081/login/oauth2/code/keycloak
#            scope: openid, profile,email

          google:
            client-id: 182476236485-ncpr7mpl8dh2aksjkuvt4d657c2dt50h.apps.googleusercontent.com
            client-secret: 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
            scope: openid, profile, email

          naver:
            client-id: 6cBwnCiZRMIENieVPZxs
            client-secret: 60wlH9Bb_X
            authorization-grant-type: authorization_code
            client-name: naver-client-app
            redirect-uri: http://localhost:8081/login/oauth2/code/naver
            scope: profile,email

        provider:
#          keycloak:
#            authorization-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/auth
#            issuer-uri: http://localhost:8080/realms/oauth2
#            jwk-set-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/certs
#            token-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/token
#            user-info-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/userinfo
#            user-name-attribute: preferred_username

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

